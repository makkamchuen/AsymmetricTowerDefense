name: Unity CICD Actions ðŸ˜Ž

on:
  pull_request: { branches: [test] }
  push: { branches: [test] }

env:
  UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
  UNITY_EMAIL: ${{ secrets.UNITY_USER }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
  buildMyUnityProject:
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - AsymmetricTowerDefense
        unityVersion:
          - 2019.4.17f1
        targetPlatform:
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Cache library from previous run
        uses: actions/cache@v1.1.0
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-
      - name: Run tests
        uses: webbertakken/unity-test-runner@v2.0-alpha-2
        id: testRunner
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
      - name: Upload test result artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}
      - name: Build unity project
        uses: webbertakken/unity-builder@v2.0-alpha-6
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
      - name: Upload build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Build
          path: build